# -*- org-confirm-babel-evaluate: nil -*-
#+TITLE: Modern Python 3 Bootcamp Exercises
#+AUTHOR: Allen McPherson
#+EMAIL: al@losalamosal.me

Signed up for class with my son.

** Massive Section of Challenges

Blah.

#+begin_src emacs-lisp :results none
(setq org-babel-python-command "python3")
#+end_src

To execute: hit ^C^C with the point anywhere in this code.

*** reverse_stringy

#+BEGIN_SRC python :results output :exports both
'''
Write a function called reverse_string which accepts a string and returns a
new string with all the characters reversed.

reverse_string('awesome') # 'emosewa'
reverse_string('Colt') # 'tloC'
reverse_string('Elie') # 'eilE'
'''

# add whatever parameters you deem necessary - good luck!
def reverse_string(s):
    return s[::-1]

print(reverse_string('awesome'))
print(reverse_string('Colt'))
print(reverse_string('Elie'))

#+END_SRC

#+RESULTS:
: emosewa
: tloC
: eilE

*** list_check

#+BEGIN_SRC python :results output :exports both
'''
Write a function called list_check which accepts a list and returns True
if each value in the list is a list. Otherwise the function should return
false.

list_check([[],[1],[2,3], (1,2)]) # False
list_check([1, True, [],[1],[2,3]]) # False
list_check([[],[1],[2,3]]) # True
'''

def list_check():
    pass
#+END_SRC

